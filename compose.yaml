version: "3.9"
name: "grand-chat"

services:
  db:
    image: postgres:16.0-alpine
    volumes:
      - chatdb:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U grandchat"]
      interval: 5s
      timeout: 5s
      retries: 10
    command: ["postgres", "-c", "wal_level=logical", "-c", "wal_writer_delay=10ms"]
    ports:
      - "25432:5432"
    environment:
      - POSTGRES_USER=grandchat
      - POSTGRES_PASSWORD=grandchat
      - POSTGRES_DB=grandchat

  backend:
    build: ./api
    command: python manage.py runserver 0.0.0.0:9500
    volumes:
      - ./api:/usr/src/app
    ports:
      - "9500:9500"
    depends_on:
      db:
        condition: service_healthy

  frontend:
    stdin_open: true
    build: ./frontend
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
    depends_on:
      - backend

  centrifugo:
    image: centrifugo/centrifugo:v5.2.0
    volumes:
      - ./centrifugo/config.json:/centrifugo/config.json
    command: centrifugo -c config.json
    expose:
      - 8000
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_healthy

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.3
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    expose:
      - 9092
    healthcheck:
      test: [ "CMD", "kafka-topics", "--list", "--bootstrap-server", "localhost:9092" ]
      interval: 2s
      timeout: 5s
      retries: 10
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_MAX_REQUEST_SIZE: "10485760"
      KAFKA_MESSAGE_MAX_BYTES: "10485760"
      KAFKA_MAX_PARTITION_FETCH_BYTES: "10485760"

  connect:
    image: debezium/connect:2.5
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      STATUS_STORAGE_TOPIC: connect_statuses

  connect-config-loader:
    image: appropriate/curl:latest
    depends_on:
      - connect
    volumes:
      - ./debezium/debezium-config.json:/debezium-config.json
    command: >
      /bin/sh -c "
        echo 'Waiting for Kafka Connect to start...';
        while ! curl -f http://connect:8083/connectors; do sleep 1; done;
        echo 'Kafka Connect is up, posting configuration';
        curl -X DELETE -H 'Content-Type: application/json' http://connect:8083/connectors/grandchat-chat-connector;
        curl -X POST -H 'Content-Type: application/json' -v --data @/debezium-config.json http://connect:8083/connectors;
        echo 'Configuration posted';
      "
  nginx:
    image: nginx:1.25.3-alpine
    volumes:
      - ./nginx:/etc/nginx/
    ports:
      - "10080:80"
    depends_on:
      - backend
      - frontend
      - centrifugo

volumes:
  chatdb: